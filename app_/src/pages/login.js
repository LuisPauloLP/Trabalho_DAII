// import Head from 'next/head'
// import Link from 'next/link'

// export default function Home() {
//   return (
//     <>
//     <Head>
//         <title>APP-BC</title>
//         <meta name="description" content="Generated by create next app" />
//         <meta name="viewport" content="width=device-width, initial-scale=1" />
//     </Head>
//     <div>
//        <div id="login-container">
//             <h1>Login</h1>
//             <form action="/admin" method="POST" id="login-form">
//                 <label htmlFor="username">Usuário</label>
//                 <input type="text" id="username" name="username" placeholder="Digite seu usuário" />
                
//                 <label htmlFor="password">Senha</label>
//                 <input type="password" id="password" name="password" placeholder="Digite sua senha" />
                
//                 <button type="submit" id="login-button">Entrar</button>
//                 <Link  id="login-exit" href="/">Voltar</Link>
//             </form>
//         </div>
//      

//     </div>  
//   </>
//   )
// }


import { useState } from 'react';
import { useRouter } from 'next/router';
import Axios from 'axios';
import Link from 'next/link'

export default function LoginPage() {
  const [credentials, setCredentials] = useState({ author_user: '', author_pwd: '' });
  const [message, setMessage] = useState({ text: '', status: '' });
  const router = useRouter();

  const API_URL = "http://localhost:3030/api/users/login";

  const handleChange = (event) => {
    const { name, value } = event.target;
    setCredentials({ ...credentials, [name]: value });
  };

  const handleLogin = async () => {
    try {
      const response = await Axios.post(API_URL, credentials);
      setMessage({ text: response.data.message, status: 'ok' });

      console.log('Usuário logado:', response.data.user);

      // Salvar informações do usuário logado
      localStorage.setItem('loggedUser', JSON.stringify(response.data.user));

      // Redirecionar para a página de administração
      router.push('/admin');
    } catch (error) {
      console.error('Erro no login:', error.response?.data?.message || error.message);
      setMessage({
        text: error.response?.data?.message || 'Erro ao conectar com o servidor',
        status: 'error',
      });
    }
  };

  return (
    <div id="login-container">
      <h1>Login</h1>
      {message.text && (
        <div className={message.status === 'ok' ? 'alert alert-success' : 'alert alert-danger'}>
          {message.text}
        </div>
      )}
      <form id="login-form">
          <label className="form-label">Usuário</label>
          <input
            type="text"
            id="username"
            name="author_user"
            value={credentials.author_user}
            placeholder="Digite seu usuário"
            onChange={handleChange}
          />
          <label className="form-label">Senha</label>
          <input
            type="password"
            id="password"
            name="author_pwd"
            value={credentials.author_pwd}
            placeholder="Digite sua senha"
            onChange={handleChange}
          />
        <button type="button" id="login-button" onClick={handleLogin}>Entrar</button>
        <Link  id="login-exit" href="/">Voltar</Link>
      </form>
    </div>
  );
}






